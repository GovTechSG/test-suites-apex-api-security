[
    {
        "id": "01",
        "description": "getPrivateKey - Invalid PrivateKeyFileName",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/invalidFileName.pem"
        },
        "errorTest": true,
        "exceptionType": {
            "default": "",
            "c#net5": "FileNotFoundException"
        },
        "expectedResult": {
            "default": "",
            "golang": "Unable to open file invalidFileName.pem",
            "nodejs": "ENOENT: no such file or directory, open '%s'",
            "java": "src/main/resources/test-suites/cert/alpha/invalidFileName.pem (No such file or directory)",
            "c#": "Could not find file \"cert/alpha/invalidFileName.pem\"",
            "c#net5": "Could not find file 'cert/alpha/invalidFileName.pem'."
        }
    },
    {
        "id": "02",
        "description": "getPublicKey - Invalid PublicKeyFileName",
        "publicKeyFileName": "cert/alpha/invalidFileName.pem",
        "errorTest": true,
        "exceptionType": {
            "default": "",
            "c#net5": "FileNotFoundException"
        },
        "expectedResult": {
            "default": "",
            "golang": "Unable to open file invalidFileName.pem",
            "nodejs": "ENOENT: no such file or directory, open '%s'",
            "java": "src/main/resources/test-suites/cert/alpha/invalidFileName.pem (No such file or directory)",
            "c#": "Could not find file \"cert/alpha/invalidFileName.pem\"",
            "c#net5": "Could not find file 'cert/alpha/invalidFileName.pem'."
        }
    },


    {
        "id": "11",
        "description": "getPrivateKey - from PKCS#1 (RSA) Encrypted",
        "message": "message",
        "publicKeyFileName": "cert/alpha/cert.alpha.x509.pem.cer",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs1.encrypted.pem",
            "passphrase": "passwordkey",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "skipTest": [
            "c#net5"
        ],
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "12",
        "description": "getPrivateKey - from PKCS#1 (RSA)",
        "message": "message",
        "publicKeyFileName": "cert/alpha/cert.alpha.x509.pem.cer",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs1.nopass.pem",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "13",
        "description": "getPrivateKey - from PKCS#8 Encrypted",
        "message": "message",
        "publicKeyFileName": "cert/alpha/cert.alpha.x509.pem.cer",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.encrypted.pem",
            "passphrase": "passwordkey",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "14",
        "description": "getPrivateKey - from PKCS#8",
        "message": "message",
        "publicKeyFileName": "cert/alpha/cert.alpha.x509.pem.cer",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.nopass.pem",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "15",
        "description": "getPrivateKey - from Keystore P12/PFX Encrypted",
        "message": "message",
        "publicKeyFileName": "cert/alpha/cert.alpha.x509.pem.cer",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/keystore.alpha.pkcs12.encrypted.p12",
            "passphrase": "p12password",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "skipTest": [
            "nodejs"
        ],
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "16",
        "description": "getPrivateKey - from Keystore P12/PFX",
        "message": "message",
        "publicKeyFileName": "cert/alpha/cert.alpha.x509.pem.cer",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/keystore.alpha.pkcs12.nopass.p12",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "skipTest": [
            "nodejs"
        ],
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "17",
        "description": "getPrivateKey - PKCS#1 (RSA) - without passphrase but access with passphrase",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs1.nopass.pem",
            "passphrase": "invalid"
        },
        "skipTest": [
            "nodejs"
        ],
        "errorTest": true,
        "exceptionType": {
            "default": "",
            "c#net5": "ArgumentException"
        },
        "expectedResult": {
            "default": "",
            "nodejs": "not applicable - nodejs read the file as text",
            "c#net5": "No supported key formats were found. Check that the input represents the contents of a PEM-encoded key file, not the path to such a file. (Parameter 'input')"
        }
    },
    {
        "id": "18",
        "description": "getPrivateKey - PKCS#8 Encrypted - invalid passphrase",

        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.encrypted.pem",
            "passphrase": "invalid"
        },
        "skipTest": [
            "nodejs"
        ],
        "errorTest": true,
        "exceptionType": {
            "default": "",
            "c#net5": "CryptographicException"
        },
        "expectedResult": {
            "default": "",
            "nodejs": "not applicable - nodejs read the file as text",
            "c#net5": "The EncryptedPrivateKeyInfo structure was decoded but was not successfully interpreted, the password may be incorrect."
        }
    },
    {
        "id": "19",
        "description": "getPrivateKey - Public Certificate provided",

        "apiParam": {
            "privateKeyFileName": "cert/alpha/cert.alpha.x509.bin.cer"
        },
        "skipTest": [
            "nodejs"
        ],
        "errorTest": true,
        "exceptionType": {
            "default": "",
            "c#net5": "CryptographicException"
        },
        "expectedResult": {
            "default": "",
            "nodejs": "not applicable - nodejs read the file as text",
            "c#net5": "No supported key formats were found. Check that the file format are supported."
        }
    },
    {
        "id": "20",
        "description": "getPrivateKey - Public Key provided",

        "apiParam": {
            "privateKeyFileName": "cert/alpha/publickey.alpha.key"
        },
        "skipTest": [
            "nodejs"
        ],
        "errorTest": true,
        "exceptionType": {
            "default": "",
            "c#net5": "CryptographicException"
        },
        "expectedResult": {
            "default": "",
            "nodejs": "not applicable - nodejs read the file as text",
            "c#net5": "No supported key formats were found. Check that the file format are supported."
        }
    },



    {
        "id": "21",
        "description": "getPublicKey - X509 Certificate in PEM Format",
        "message": "message",
        "publicKeyFileName": "cert/alpha/cert.alpha.x509.pem.cer",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.nopass.pem",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "22",
        "description": "getPublicKey - X509 Certificate in DER Format",
        "message": "message",
        "publicKeyFileName": "cert/alpha/cert.alpha.x509.bin.cer",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.nopass.pem",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "skipTest": [
            "nodejs"
        ],
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "23",
        "description": "getPublicKey - Public Key in PEM Format",
        "message": "message",
        "publicKeyFileName": "cert/alpha/publickey.alpha.key",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.nopass.pem",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "24",
        "description": "getPublicKey - from Keystore P12/PFX Encrypted",
        "message": "message",
        "publicKeyFileName": "cert/alpha/keystore.alpha.pkcs12.encrypted.p12",
        "passphrase": "p12password",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.nopass.pem",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "skipTest": [
            "nodejs"
        ],
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "25",
        "description": "getPublicKey - from Keystore P12/PFX",
        "message": "message",
        "publicKeyFileName": "cert/alpha/keystore.alpha.pkcs12.nopass.p12",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.nopass.pem",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "skipTest": [
            "nodejs"
        ],
        "expectedResult": {
            "default": "true"
        }
    },
    {
        "id": "26",
        "description": "getPublicKey - get Public Key from Private Key",
        "message": "message",
        "publicKeyFileName": "cert/alpha/key.alpha.pkcs8.nopass.pem",
        "apiParam": {
            "privateKeyFileName": "cert/alpha/key.alpha.pkcs8.nopass.pem",
            "signature": "BYTzB10qy1u0lNTi2CKpn5TfakyKcm4b7q9w3hMkhoupGLklB15N8mNCDxGQrnuPGc0CktLjBEk2+csJ0GLzo/J+p+FuluhMPXn2RvX6GWFhu5RY4d4VzLIy369FyWlu+a4OX5QKJCJ5Lr70TZ82GFW4nYCnqLQa1jLAqtzldLCHprN3Nd1gPP01a/E3N2I70l+q/M8mWdZlJoSI148waSPy+RHbSuRF+23BQ/jKCRrG63TAZAMzuT2prCEXuMFmWZBRPPYVJ1wQvdoot7M99n8o0/1oq5G/Q/pWNi7N6saz9FrF594j+qGi9Sj4PUjvg3FMf2mYj4e2UX0EqTqT9g=="
        },
        "skipTest": [
            "nodejs"
        ],
        "expectedResult": {
            "default": "true"
        }
    }
]